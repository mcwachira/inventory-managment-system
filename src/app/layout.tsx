// app/layout.tsx
"use client";

import { useState } from "react";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

import AppSideBar from "@/components/AppSideBar";
import Header from "@/components/Header";
import { SidebarProvider } from "@/components/ui/sidebar";
import { useIsMobile } from "@/hooks/use-mobile";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const isMobile = useIsMobile();

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <SidebarProvider
          defaultOpen={!isMobile}
          open={isMobile ? sidebarOpen : undefined}
          onOpenChange={isMobile ? setSidebarOpen : undefined}
        >
          <div className="min-h-screen flex bg-gray-50 w-full">
            <AppSideBar />
            <div className="flex-1 flex flex-col overflow-hidden">
              <Header
                sidebarOpen={sidebarOpen}
                setSidebarOpen={setSidebarOpen}
              />
              <main
                className={`flex-1 overflow-auto p-4 md:p-6 transition-all ${isMobile && sidebarOpen ? "opacity-50" : ""}`}
              >
                <div className="mx-auto max-w-7xl">{children}</div>
              </main>
            </div>
          </div>
        </SidebarProvider>
      </body>
    </html>
  );
}
